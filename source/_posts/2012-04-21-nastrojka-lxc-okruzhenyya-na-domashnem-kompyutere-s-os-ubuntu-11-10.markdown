---
comments: true
date: 2012-04-21 14:31:09
layout: post
slug: nastrojka-lxc-okruzhenyya-na-domashnem-kompyutere-s-os-ubuntu-11-10
title: Настройка LXC окружения на домашнем компьютере с ОС Ubuntu 11.10
wordpress_id: 351
categories:
- GNU/Linux
- Администрирование и настройка
tags:
- linux
- LXC
- ubuntu server 11.10
- виртуализация
---

Статья тестовая, незавершенная, исключительно для сохранения опыта.



#### LXC - LinuX Containers.

Контейнеры Linux - технология виртуализации программного обеспечения на уровне операционной системы. Контейнеры Linux поддерживаются на уровне ядра.

**Преимущества контейнерной технологии lxc для меня лично.**



        
  * Не требуется поддержка виртуализации vt-x процессором. Intel Atom CPU D525 ее не поддерживает.

	
  * Легко устанавливается из репозиториев ubuntu.


        
  * Легко формируется минимальный сервер ubuntu в контейнере.

	
  * Работает


	
  * В силу особенностей технологии, унифицирует программное окружение контейнеров и хост-системы. Условно говоря - "везде ubuntu".


	
  * Присутствуют решаемые трудности.



**Что получиться в результате настройки**



    
  * Будет установлена на хост-системе (домашнем компьютере) инфраструктура lxc

    
  * Будет создан контейнер с минимальной версией ubuntu 11.10.

    
  * Проведена локализация и первоначальная настройка контейнера.

    
  * Управление контейнером будет осуществляться стандартными средствами lxc и ОС.


<!-- more -->

**Установка поддержки инфраструктуры LXC в хост-системе Ubuntu 11.10**


```
$ sudo apt-get update
$ sudo apt-get install lxc
```
**Установка сопутствующих пакетов в хост-системе**
Комплект утилит для управления мостовыми(bridge) соединениями. Дело в том, что сетевое подключение контейнера к локальной сети и интернет, выполняется через сетевой мост.
```
$ sudo apt-get install bridge-utils
```


Операции с контейнерами выполняются в пользовательском окружении root хост-системы.
Перейти в пользовательское окружении суперпользователя root

```
$ sudo -s

```


**Создание контейнера, команда lxc-create**

Создание контейнера с выбранным именем 1c_ubuntu, на основе встроенного шаблона ubuntu 11.10
`$ sudo lxc-create -n 1c_ubuntu -t ubuntu`
Более правильно, вначале создать файл конфигурации, а потом на его основе создать контейнер. Это часто используется для копирования настроек сети в конфигурационный файл контейнера.
Конфигурационный файл config, относящийся к создаваемому контейнеру, создается в папке /var/lib/lxc/1c_ubuntu/
Корневая файловая система контейнера создается в папке /var/lib/lxc/1c_ubuntu/rootfs

Производится загрузка пакетов минимальной версии Ubuntu 11.10 (или текущей версии) и сохранение ее в кэше, дополнительно в хост-систему установился пакет lxcguest. Были какие-то трудности с локализацией.
Возможно мелкая трудность, решится, с помощью генерации "C" локали.
В некоторых системах, исправляется следующим образом:
```
$ sudo locale-gen ru_RU.UTF-8
$ sudo dpkg-reconfigure locales
```
и еще
```
$ export LC_ALL=ru_RU.UTF-8
```
Также можно отредактировать /etc/default/locale и внести строку вида LC_ALL=ru_RU.UTF-8
это можно сделать перед генерацией сервера.

Файл конфигурации контейнера 1c_ubuntu.conf у меня выглядел так:

```
lxc.network.type = veth 
lxc.network.flags = up 
lxc.network.link = br0 
lxc.network.hwaddr = 00:11:22:33:55:44 
lxc.network.name = eth0 
lxc.network.ipv4 = 0.0.0.0 
lxc.cgroup.cpu.shares = 512 
lxc.cgroup.memory.limit_in_bytes = 1024M 
lxc.cgroup.memory.memsw.limit_in_bytes = 3072M 
```

Опционально. Удаление контейнера, команда lxc-destroy
Если какие-то настройки неудачны, то можно удалить созданный контейнер
```
$ lxc-destroy -n 1c_ubuntu

```


**Первая правка конфигурации контейнера для подключение к локальной сети**
Выбор способа сетевого подключения.  Настройка локальной сети контейнеров, самая сложная часть в данном изложении.
Мостовое подключение, при наличии собственной внутренней домашней локальной сети за роутером, позволяет обращаться к контейнеру как обычному компьютеру, с любых домашних компьютеров. 

Для того что бы это стало возможно редактируем /etc/network/interfaces
```
auto lo
iface lo inet loopback

auto br0
iface br0 inet static
address 192.168.1.100
netmask 255.255.255.0
gateway 192.168.1.1
bridge_ports eth0
bridge_stp off
bridge_maxwait 5
post-up /usr/sbin/brctl setfd br0 0
```
после того как файл будет отредактирован выполнете команду
```
# ifup br0

``` 
или

```
#sudo /etc/init.d/networking restart

```
также необходимо добавить несколько правил в таблицу iptables
```
iptables -A FORWARD -d 192.168.1.0/24 -i br0 -j ACCEPT 
iptables -A FORWARD -s 192.168.1.0/24 -i br0 -j ACCEPT 
-A INPUT -p udp -m udp --sport 67 --dport 68 -j ACCEPT 
-A INPUT -p udp -m udp --dport 67 --sport 68 -j ACCEPT
```
проверяем что всё работает
```
$ping ya.ru
```
если сразу не заработало то пробуем отключить фаервол на хосте и пробуем ещё раз. Если с отключёным фаервол работает, тогда надо или разбиратся что имено блокирует выход в сеть, или прописать 
```
# sysctl net.bridge.bridge-nf-call-iptables=0
# sysctl net.bridge.bridge-nf-call-arptables=0
```
в терминале. Последние две команды небходимы для того чтобы виртуальные мосты работали более приближенно к простому железу, поэтому нужно отключить применение правил iptables на самом мосту. 

Локализация (поддержка русского языка) в консоли контейнера
После появления интернета в контейнере, выполнить обновление репозиториев ubuntu и доустановить локализацию сервера.
```
$ sudo apt-get update
$ sudo apt-get install language-pack-ru-base
$ sudo nano /etc/default/locale
```
Добавляем строку, если нет: LANG=ru_RU.UTF-8
```
$ sudo dpkg-reconfigure locales

```
Выходим и входим заново в контейнере. По идее, перезагружаться не надо.
Команда покажет текущие настройки локали:
```
$ locale
```

**Справочно. Перезагрузка lxc-контейнера изнутри**
```
$ sudo shutdown -r now
```

Первый запуск, команда запуска контейнера lxc-start
```
$ sudo lxc-start -n 1c_ubuntu -d
```
Параметр -d вернёт нам ввод командной строки хост-системы вместо запуска сеанса гостевой машины в текущем терминале.

**Первоначальная настройка изнутри контейнера**

Имя пользователя и пароль по умолчанию, при первом входе в консоль контейнера - root/root.
Далее создаем главного пользователя с именем на выбор, - "admin" и добавляем его в группы sudousers.
```
$ adduser admin

```
аккуратно заполняем поля.
```
$ adduser admin sudo

```
добавляем в группу sudo users.

Изменяем пароль пользователя root, т.к. мы зашли под ним.
```
$ passwd

```


Проверка сетевого подключения изнутри контейнера
```
$ ping www.google.com

```


Выход пользователя из контейнера
```
$ exit

```
Выключение контейнера изнутри
```
$ sudo shutdown -h now

```

Безопасное выключение контейнера снаружи, из хост-системы
Вход в консоль управления контейнером
```
$ sudo lxc-console -n 1c_ubuntu

```
Команда выключения
```
# 1c_ubuntu > init 0
```

Грубое выключение контейнера
``` 
$ sudo lxc-stop -n 1c_ubuntu

```


Чтобы не делать повторно такие настройки, базовую конфигурацию контейнера для местных условий можно сохранить в ... и создавать новые контейнеры на базе этой конфигурации
Определения хранилища пользовательских данных
Для удобного пользования контейнером и удобного резервирования пользовательских данных, можно выносить блочные устройства в другое место.



**Резервное копирование контейнера**
Сразу после установки и настройки, рекомендуется создать резервную копию с помощью tar
Пример файла backup.sh:

```
#!/bin/bash
NAME=1c_ubuntu
SRC_DIR=/var/lib/lxc/$NAME
DEST_DIR=/media/vm/backups/$NAME
cd $SRC_DIR
mkdir -p $DEST_DIR
tar --one-file-system -cf $DEST_DIR/$NAME-`date +%F`.tar .
#tar --one-file-system -czf $DEST_DIR/$NAME-`date +%F`.tar.gz .
```
В несжатом состоянии структура создаётся очень быстро.

Перенос контейнера в другое сетевое окружение (другая конфигурация сети)
Например, перенос контейнера в сеть с роутером и динамическим присвоением "серого" IP-адреса. Операционная система хост-системы должна совпадать с исходной.
Фактически, все определяется файлом конфигурации контейнера.
  


Ресурсы





    
  * Обстоятельная статья про виртуальные мосты в Linux http://xgu.ru/wiki/Linux_Bridge

    
  * Тестовый SyncML сервер см. http://gimmor.blogspot.com/2012/03/syncml.html

    
  * LXC виртуализация, http://koder-ua.blogspot.com/

    
  * Пояснение о виртуальных сетях lxc, в картинках на англ. языке  http://planet.gentoo.org/archives/2010/2010-09-06.html



По материалам статьи [Настройка LXC окружения на домашнем компьютере 
](http://gimmor.blogspot.com/2012/03/lxc.html)
